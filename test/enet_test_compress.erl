-module(enet_test_compress).

-include_lib("enet/src/enet_compress2.hrl").

-export([
         decompress_test/0
        ]).

%    c("test/enet_test_compress.erl"). enet_test_compress:decompress_test().
decompress_test() ->
  decompress1_test(),
  decompress2_test(),
  decompress3_test(),
  decompress4_test(),
  decompress5_test(),
  decompress6_test()
  .

decompress1_test() ->
  InData0 = <<132, 122, 137, 176, 253, 244, 28, 11, 130, 185, 248, 226, 27, 162, 145, 239, 254, 121, 231, 214, 252, 32, 60, 212, 36>>,
  OutData0 = <<131, 255, 0, 1, 0, 0, 0, 0, 0, 0, 5, 120, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 19, 136, 0, 0, 0, 2, 0, 0, 0, 2, 238, 109, 167, 37>>,

  Context = orddict:from_list([{Idx, #enet_symbol{}} || Idx <- lists:seq(0,4095)]),
  {ok, OutData} = enet_compress2:enet_range_coder_decompress(Context, InData0),
  case OutData of
    OutData0 ->
      io:fwrite("decompress1_test: OK ~n");
    _ ->
      io:fwrite("decompress1_test: Failed ~n"),
      io:fwrite("Expected: ~w ~n", [OutData0]),
      io:fwrite("Got: ~w ~n", [OutData])
  end.

decompress2_test() ->
  InData1 = <<2, 252, 8, 54, 173, 66, 139, 250, 4, 227, 165, 174, 11, 163, 18, 237, 211, 86, 149, 207, 137, 76, 54, 229, 164, 41, 65, 190, 101, 57, 11, 152, 186, 181, 218, 238, 221, 163, 219, 54, 233, 74, 66, 211, 121, 109, 42, 2, 170, 87, 177, 79, 18, 55, 28, 103, 68, 215, 46, 201, 93, 55, 48, 188, 96, 128, 84, 104, 89, 7, 70, 104, 215, 175, 140, 149, 28, 101, 168, 202, 205, 204, 152, 150, 10, 5, 70, 228, 176, 102, 27, 236, 43, 145, 90, 250, 64, 114, 183, 226, 65, 155, 46, 47, 178, 26, 146, 14, 200, 183, 246, 40, 41, 36, 173, 205, 36, 55, 125, 212, 232, 185, 85, 250, 208, 132, 22, 45, 141, 71, 157, 123, 45, 205, 190, 126, 162, 45, 102, 69, 1, 10, 105, 86, 12, 25, 137, 44, 244, 19, 73, 12, 237, 137, 106, 108, 252, 134, 61, 169, 27, 69, 107, 58, 114, 141, 15, 102, 78, 53, 216, 45, 184, 151, 164, 112, 251, 211, 58, 9, 74, 119, 40, 104, 180, 171, 242, 139, 11, 123, 24, 144, 156, 185, 131, 50, 5, 98, 142, 212, 236, 6, 62, 68, 191, 249, 23, 255, 80, 192, 177, 98, 212, 171, 115, 99, 65, 10, 69, 66, 98, 53, 17, 139, 173, 252, 2, 87, 114, 247, 33, 46, 119, 243, 118, 255, 248, 218, 141, 150, 48, 9, 38, 81, 39, 54, 238, 212, 167, 22, 88, 127, 77, 19, 251, 32, 85, 153, 241, 193, 92, 39, 183, 31, 190, 215, 133, 11, 167, 40, 195, 72, 47, 174, 186, 89, 91, 40, 70, 36, 116, 139, 244, 183, 186, 242, 102, 159, 30, 132, 90, 241, 178, 168, 226, 151, 232, 196, 119, 204, 247, 210, 15, 8, 28, 26, 1, 237, 59, 92, 55, 97, 66, 148, 59, 214, 167, 46, 230, 88, 215, 94, 82, 23, 167, 34, 225, 18>>,
  OutData1 = <<1, 255, 0, 2, 0, 2, 18, 158, 134, 0, 0, 1, 0, 24, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 0, 134, 0, 0, 2, 0, 114, 66, 117, 116, 32, 73, 32, 109, 117, 115, 116, 32, 101, 120, 112, 108, 97, 105, 110, 32, 116, 111, 32, 121, 111, 117, 32, 104, 111, 119, 32, 97, 108, 108, 32, 116, 104, 105, 115, 32, 109, 105, 115, 116, 97, 107, 101, 110, 32, 105, 100, 101, 97, 32, 111, 102, 32, 100, 101, 110, 111, 117, 110, 99, 105, 110, 103, 32, 112, 108, 101, 97, 115, 117, 114, 101, 32, 97, 110, 100, 32, 112, 114, 97, 105, 115, 105, 110, 103, 32, 112, 97, 105, 110, 32, 119, 97, 115, 32, 98, 111, 114, 110, 32, 97, 110, 100, 32, 73, 32, 119, 105, 108, 108, 0, 134, 0, 0, 3, 1, 115, 83, 101, 100, 32, 117, 116, 32, 112, 101, 114, 115, 112, 105, 99, 105, 97, 116, 105, 115, 32, 117, 110, 100, 101, 32, 111, 109, 110, 105, 115, 32, 105, 115, 116, 101, 32, 110, 97, 116, 117, 115, 32, 101, 114, 114, 111, 114, 32, 115, 105, 116, 32, 118, 111, 108, 117, 112, 116, 97, 116, 101, 109, 32, 97, 99, 99, 117, 115, 97, 110, 116, 105, 117, 109, 32, 100, 111, 108, 111, 114, 101, 109, 113, 117, 101, 32, 108, 97, 117, 100, 97, 110, 116, 105, 117, 109, 44, 32, 116, 111, 116, 97, 109, 32, 114, 101, 109, 32, 97, 112, 101, 114, 105, 97, 109, 44, 32, 101, 97, 113, 117, 101, 32, 105, 112, 115, 97, 32, 113, 117, 97, 101, 32, 97, 98, 32, 105, 108, 108, 111, 32, 105, 110, 118, 101, 110, 116, 111, 114, 101, 32, 118, 101, 114, 105, 116, 97, 116, 105, 115, 32, 101, 116, 32, 113, 117, 97, 115, 105, 32, 97, 114, 99, 104, 105, 116, 101, 99, 116, 111, 32, 98, 101, 97, 116, 97, 101, 32, 118, 105, 116, 97, 101, 32, 100, 105, 99, 116, 97, 32, 115, 117, 110, 116, 32, 101, 120, 112, 108, 105, 99, 97, 98, 111, 46, 32, 78, 101, 109, 111, 32, 101, 110, 105, 109, 32, 105, 112, 115, 97, 109, 32, 118, 111, 108, 117, 112, 116, 97, 116, 101, 109, 32, 113, 117, 105, 97, 32, 118, 111, 108, 117, 112, 116, 97, 115, 32, 115, 105, 116, 32, 97, 115, 112, 101, 114, 110, 97, 116, 117, 114, 32, 97, 117, 116, 32, 111, 100, 105, 116, 32, 97, 117, 116, 32, 102, 117, 103, 105, 116, 44, 32, 115, 101, 100, 32, 113, 117, 105, 97, 32, 99, 111, 110, 115, 101, 113, 117, 117, 110, 116, 117, 114, 32, 109, 97, 103, 110, 105, 32, 100, 111, 108, 111, 114, 101, 115, 32, 101, 111, 115, 32, 113, 117, 105, 32, 114, 97, 116, 105, 111, 110, 101, 32, 118, 111, 108, 117, 112, 116, 97, 116, 101, 109, 32, 115, 101, 113, 117, 105, 32, 110, 101, 115, 99, 105, 117, 110, 116, 46, 0>>,

  Context = orddict:from_list([{Idx, #enet_symbol{}} || Idx <- lists:seq(0,4095)]),
  {ok, OutData} = enet_compress2:enet_range_coder_decompress(Context, InData1),
  case OutData of
    OutData1->
      io:fwrite("decompress2_test: OK ~n");
    _ ->
      io:fwrite("decompress2_test: Failed ~n"),
      io:fwrite("Expected: ~w ~n", [OutData1]),
      io:fwrite("Got: ~w ~n", [OutData])
  end.

decompress3_test() ->
  InData2 = <<136, 120, 132, 156, 86, 190, 202, 237, 96, 43, 211, 88, 180, 83, 151, 255, 107, 102, 70, 47, 215, 8, 148, 122, 102, 243, 214, 97, 193, 227, 8, 147, 119, 53, 191, 255, 251, 126, 99, 80, 136, 20, 82, 89, 117, 241, 115, 116, 143, 245, 76, 44, 162, 61, 46, 158, 93, 177, 100, 73, 70, 253, 119, 230, 103, 249, 136, 75, 62, 17, 18, 192, 127, 202, 47, 17, 40, 142, 148, 164, 43, 24, 60, 186, 192, 224, 23, 175, 130, 90, 183, 189, 66, 181, 238, 77, 62, 178, 162, 27, 253, 252, 232, 51, 13, 193, 138, 235, 82, 175, 57, 155, 203, 154, 29, 252, 220, 158, 108, 161, 71, 202, 49, 221, 146, 150, 65, 137, 144, 58, 224, 168, 28, 22, 159, 93, 41, 118, 39, 73, 246, 218, 7, 249, 56, 209, 17, 42, 69, 60, 62, 225, 194, 43, 204, 48, 241, 34, 231, 6, 41, 77, 125, 153, 248, 240, 127, 27, 212, 77, 213, 209, 183, 60, 219, 81, 250, 203, 59, 154, 110, 171, 204, 58, 7, 72, 55, 67, 181, 46, 33, 193, 79, 195, 43, 221, 141, 149, 193, 108, 224, 209, 5, 211, 239, 81, 254, 173, 171, 119, 102, 245, 16, 97, 92, 21, 45, 177, 116, 193, 208, 37, 191, 121, 81, 112, 95, 211, 102, 140, 78, 112, 5, 162, 239, 32, 5, 35, 67, 159, 142, 95, 34, 145, 235, 60, 108, 214, 57, 106, 78, 44, 246, 196, 73, 76, 124, 162, 26, 78, 62, 104, 96, 47, 130, 27, 33, 14, 92, 233, 204, 135, 169, 57, 102, 20, 112, 81, 228, 89, 145, 91, 128, 204, 207, 37, 187, 157, 33, 62, 130, 153, 69, 234, 61, 160, 225, 46, 183, 176, 233, 253, 119, 238, 25, 11, 52, 206, 96, 20, 135, 71, 47, 124, 227, 28, 224, 227, 71, 185, 106, 168, 116, 250, 105, 53, 161, 40, 34, 42, 34, 4, 127, 196, 121, 82, 119, 57, 238, 138, 158, 155, 129, 243, 84, 106, 186, 217, 196, 112, 155, 182, 80, 88, 245, 32, 20, 212, 207, 200, 225, 231, 221, 159, 176, 104, 171, 230, 36, 30, 239, 99, 170, 29, 24, 107, 244, 4, 5, 104, 174, 35, 224, 125, 36, 172, 45, 111, 6, 210, 30, 10, 236, 67, 87, 251, 220, 119, 149, 104, 144, 220, 30, 27, 52, 64, 115, 244, 182, 224, 149, 185, 32, 144, 216, 112, 53, 103, 110, 208, 228, 142, 96, 185, 224, 27, 61, 157, 67, 3, 1, 191, 182, 126, 251, 126, 237, 66, 171, 72, 158, 233, 198, 1, 114, 75, 109, 44, 242, 120, 85, 201, 223, 82, 131, 232, 201, 0, 117, 211, 69, 116, 108, 138, 249, 188, 201, 50, 30, 107, 159, 57, 5, 17, 240, 85, 82, 174, 237, 52, 134, 30, 23, 188, 70, 172, 224, 102, 47, 38, 98, 166, 121, 155, 217, 232, 55, 60, 52, 127, 119, 150, 27, 168, 172, 131, 135, 180, 215, 106, 90, 70, 122, 46, 4, 113, 220, 189, 97, 69, 241, 176, 240, 118, 5, 141, 192, 86, 98, 98, 249, 218, 152, 91, 114, 26, 46, 118, 253, 176, 65, 65, 186, 193, 229, 189, 28, 127, 224, 113, 98, 190, 0, 180, 135, 164, 20, 135, 243, 235, 246, 193, 252, 194, 163, 219, 160, 166, 125, 243, 47, 255, 112, 125, 53, 166, 165, 37, 46, 237, 14, 97, 116, 151, 165, 176, 205, 155, 215, 9, 82, 246, 220, 102, 97, 157, 231, 41, 228, 16, 246, 226, 245, 43, 78, 89, 155, 100, 79, 241, 125, 239, 86, 160, 2, 210, 222, 234, 168, 197, 4, 50, 149, 65, 142, 139, 40, 24, 199, 231, 199, 237, 231, 36, 29, 89, 78, 236, 122, 115, 102, 101, 118, 161, 208, 35, 65, 80, 233, 105, 159, 250, 53, 242, 11, 239, 175, 105, 29, 145, 157, 50, 123, 56, 29, 97, 130, 250, 119, 250, 232, 87, 102, 189>>,
  OutData2 = <<136, 0, 0, 4, 0, 4, 5, 88, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 6, 151, 0, 0, 0, 0, 65, 116, 32, 118, 101, 114, 111, 32, 101, 111, 115, 32, 101, 116, 32, 97, 99, 99, 117, 115, 97, 109, 117, 115, 32, 101, 116, 32, 105, 117, 115, 116, 111, 32, 111, 100, 105, 111, 32, 100, 105, 103, 110, 105, 115, 115, 105, 109, 111, 115, 32, 100, 117, 99, 105, 109, 117, 115, 32, 113, 117, 105, 32, 98, 108, 97, 110, 100, 105, 116, 105, 105, 115, 32, 112, 114, 97, 101, 115, 101, 110, 116, 105, 117, 109, 32, 118, 111, 108, 117, 112, 116, 97, 116, 117, 109, 32, 100, 101, 108, 101, 110, 105, 116, 105, 32, 97, 116, 113, 117, 101, 32, 99, 111, 114, 114, 117, 112, 116, 105, 32, 113, 117, 111, 115, 32, 100, 111, 108, 111, 114, 101, 115, 32, 101, 116, 32, 113, 117, 97, 115, 32, 109, 111, 108, 101, 115, 116, 105, 97, 115, 32, 101, 120, 99, 101, 112, 116, 117, 114, 105, 32, 115, 105, 110, 116, 32, 111, 99, 99, 97, 101, 99, 97, 116, 105, 32, 99, 117, 112, 105, 100, 105, 116, 97, 116, 101, 32, 110, 111, 110, 32, 112, 114, 111, 118, 105, 100, 101, 110, 116, 44, 32, 115, 105, 109, 105, 108, 105, 113, 117, 101, 32, 115, 117, 110, 116, 32, 105, 110, 32, 99, 117, 108, 112, 97, 32, 113, 117, 105, 32, 111, 102, 102, 105, 99, 105, 97, 32, 100, 101, 115, 101, 114, 117, 110, 116, 32, 109, 111, 108, 108, 105, 116, 105, 97, 32, 97, 110, 105, 109, 105, 44, 32, 105, 100, 32, 101, 115, 116, 32, 108, 97, 98, 111, 114, 117, 109, 32, 101, 116, 32, 100, 111, 108, 111, 114, 117, 109, 32, 102, 117, 103, 97, 46, 32, 69, 116, 32, 104, 97, 114, 117, 109, 32, 113, 117, 105, 100, 101, 109, 32, 114, 101, 114, 117, 109, 32, 102, 97, 99, 105, 108, 105, 115, 32, 101, 115, 116, 32, 101, 116, 32, 101, 120, 112, 101, 100, 105, 116, 97, 32, 100, 105, 115, 116, 105, 110, 99, 116, 105, 111, 46, 32, 78, 97, 109, 32, 108, 105, 98, 101, 114, 111, 32, 116, 101, 109, 112, 111, 114, 101, 44, 32, 99, 117, 109, 32, 115, 111, 108, 117, 116, 97, 32, 110, 111, 98, 105, 115, 32, 101, 115, 116, 32, 101, 108, 105, 103, 101, 110, 100, 105, 32, 111, 112, 116, 105, 111, 32, 99, 117, 109, 113, 117, 101, 32, 110, 105, 104, 105, 108, 32, 105, 109, 112, 101, 100, 105, 116, 32, 113, 117, 111, 32, 109, 105, 110, 117, 115, 32, 105, 100, 32, 113, 117, 111, 100, 32, 109, 97, 120, 105, 109, 101, 32, 112, 108, 97, 99, 101, 97, 116, 32, 102, 97, 99, 101, 114, 101, 32, 112, 111, 115, 115, 105, 109, 117, 115, 44, 32, 111, 109, 110, 105, 115, 32, 118, 111, 108, 117, 112, 116, 97, 115, 32, 97, 115, 115, 117, 109, 101, 110, 100, 97, 32, 101, 115, 116, 44, 32, 111, 109, 110, 105, 115, 32, 100, 111, 108, 111, 114, 32, 114, 101, 112, 101, 108, 108, 101, 110, 100, 117, 115, 46, 32, 84, 101, 109, 112, 111, 114, 105, 98, 117, 115, 32, 97, 117, 116, 101, 109, 32, 113, 117, 105, 98, 117, 115, 100, 97, 109, 32, 101, 116, 32, 97, 117, 116, 32, 111, 102, 102, 105, 99, 105, 105, 115, 32, 100, 101, 98, 105, 116, 105, 115, 32, 97, 117, 116, 32, 114, 101, 114, 117, 109, 32, 110, 101, 99, 101, 115, 115, 105, 116, 97, 116, 105, 98, 117, 115, 32, 115, 97, 101, 112, 101, 32, 101, 118, 101, 110, 105, 101, 116, 32, 117, 116, 32, 101, 116, 32, 118, 111, 108, 117, 112, 116, 97, 116, 101, 115, 32, 114, 101, 112, 117, 100, 105, 97, 110, 100, 97, 101, 32, 115, 105, 110, 116, 32, 101, 116, 32, 109, 111, 108, 101, 115, 116, 105, 97, 101, 32, 110, 111, 110, 32, 114, 101, 99, 117, 115, 97, 110, 100, 97, 101, 46, 32, 73, 116, 97, 113, 117, 101, 32, 101, 97, 114, 117, 109, 32, 114, 101, 114, 117, 109, 32, 104, 105, 99, 32, 116, 101, 110, 101, 116, 117, 114, 32, 97, 32, 115, 97, 112, 105, 101, 110, 116, 101, 32, 100, 101, 108, 101, 99, 116, 117, 115, 44, 32, 117, 116, 32, 97, 117, 116, 32, 114, 101, 105, 99, 105, 101, 110, 100, 105, 115, 32, 118, 111, 108, 117, 112, 116, 97, 116, 105, 98, 117, 115, 32, 109, 97, 105, 111, 114, 101, 115, 32, 97, 108, 105, 97, 115, 32, 99, 111, 110, 115, 101, 113, 117, 97, 116, 117, 114, 32, 97, 117, 116, 32, 112, 101, 114, 102, 101, 114, 101, 110, 100, 105, 115, 32, 100, 111, 108, 111, 114, 105, 98, 117, 115, 32, 97, 115, 112, 101, 114, 105, 111, 114, 101, 115, 32, 114, 101, 112, 101, 108, 108, 97, 116, 65, 116, 32, 118, 101, 114, 111, 32, 101, 111, 115, 32, 101, 116, 32, 97, 99, 99, 117, 115, 97, 109, 117, 115, 32, 101, 116, 32, 105, 117, 115, 116, 111, 32, 111, 100, 105, 111, 32, 100, 105, 103, 110, 105, 115, 115, 105, 109, 111, 115, 32, 100, 117, 99, 105, 109, 117, 115, 32, 113, 117, 105, 32, 98, 108, 97, 110, 100, 105, 116, 105, 105, 115, 32, 112, 114, 97, 101, 115, 101, 110, 116, 105, 117, 109, 32, 118, 111, 108, 117, 112, 116, 97, 116, 117, 109, 32, 100, 101, 108, 101, 110, 105, 116, 105, 32, 97, 116, 113, 117, 101, 32, 99, 111, 114, 114, 117, 112, 116, 105, 32, 113, 117, 111, 115, 32, 100, 111, 108, 111, 114, 101, 115, 32, 101, 116, 32, 113, 117, 97, 115, 32, 109, 111, 108, 101, 115, 116, 105, 97, 115, 32, 101, 120, 99, 101, 112, 116, 117, 114, 105, 32, 115, 105, 110, 116, 32, 111, 99, 99, 97, 101, 99, 97, 116, 105, 32, 99, 117, 112, 105, 100, 105, 116, 97, 116, 101, 32, 110, 111, 110, 32, 112, 114, 111, 118, 105, 100, 101, 110, 116, 44, 32, 115, 105, 109, 105, 108, 105, 113, 117, 101, 32, 115, 117, 110, 116, 32, 105, 110, 32, 99, 117, 108, 112, 97, 32, 113, 117, 105, 32, 111, 102, 102, 105, 99, 105, 97, 32, 100, 101, 115, 101, 114, 117, 110, 116, 32, 109, 111, 108, 108, 105, 116, 105, 97, 32, 97, 110, 105, 109, 105, 44, 32, 105, 100, 32, 101, 115, 116, 32, 108, 97, 98, 111, 114, 117, 109, 32, 101, 116, 32, 100, 111, 108, 111, 114, 117, 109, 32, 102, 117, 103, 97, 46, 32, 69, 116, 32, 104, 97, 114, 117, 109, 32, 113, 117, 105, 100, 101, 109, 32, 114, 101, 114, 117, 109, 32, 102, 97, 99, 105, 108, 105, 115, 32, 101, 115, 116, 32, 101, 116, 32, 101, 120, 112, 101, 100, 105, 116, 97, 32, 100, 105, 115, 116, 105, 110, 99, 116, 105, 111, 46, 32, 78, 97, 109, 32, 108, 105, 98, 101, 114, 111, 32, 116, 101, 109, 112, 111, 114, 101, 44, 32, 99, 117, 109, 32, 115, 111, 108, 117, 116, 97, 32, 110, 111, 98, 105, 115, 32, 101, 115, 116, 32, 101, 108, 105, 103, 101, 110, 100, 105, 32, 111, 112, 116, 105, 111, 32, 99, 117, 109, 113, 117, 101, 32, 110, 105, 104, 105, 108, 32, 105, 109, 112, 101, 100, 105, 116, 32, 113, 117, 111, 32, 109, 105, 110, 117, 115, 32, 105, 100, 32, 113, 117, 111, 100, 32, 109, 97, 120, 105, 109, 101, 32, 112, 108, 97, 99, 101, 97, 116, 32, 102, 97, 99, 101, 114, 101, 32, 112, 111, 115, 115, 105, 109, 117, 115, 44, 32, 111, 109, 110, 105, 115, 32, 118, 111, 108, 117, 112, 116, 97, 115, 32, 97, 115, 115, 117, 109, 101, 110, 100, 97, 32, 101, 115, 116, 44, 32, 111, 109, 110, 105, 115, 32, 100, 111, 108, 111, 114, 32, 114, 101>>,

  Context = orddict:from_list([{Idx, #enet_symbol{}} || Idx <- lists:seq(0,4095)]),
  {ok, OutData} = enet_compress2:enet_range_coder_decompress(Context, InData2),
  case OutData of
    OutData2->
      io:fwrite("decompress3_test: OK ~n");
    _ ->
      io:fwrite("decompress3_test: Failed ~n"),
      io:fwrite("Expected: ~w ~n", [OutData2]),
      io:fwrite("Got: ~w ~n", [OutData])
  end.

decompress4_test() ->
  InData3 = <<136, 120, 132, 158, 232, 84, 154, 166, 177, 117, 58, 111, 167, 21, 7, 140, 60, 35, 49, 111, 15, 59, 19, 249, 221, 84, 231, 96, 139, 201, 54, 148, 123, 199, 44, 76, 202, 52, 157, 222, 150, 183, 241, 198, 228, 42, 95, 101, 152, 146, 232, 152, 110, 66, 59, 242, 197, 91, 9, 246, 169, 161, 250, 2, 122, 200, 192, 11, 183, 25, 230, 119, 147, 9, 61, 171, 122, 20, 121, 199, 254, 123, 16, 69, 42, 100, 173, 174, 217, 237, 80, 103, 238, 206, 169, 149, 106, 186, 142, 40, 252, 242, 82, 198, 112, 89, 0, 33, 238, 5, 25, 117, 103, 202, 133, 236, 72, 77, 224, 25, 207, 176, 214, 20, 140, 77, 184, 64, 81, 30, 215, 61, 124, 191, 153, 255, 217, 126, 125, 193, 220, 26, 32, 121, 135, 59, 80, 255, 145, 134, 141, 189, 175, 83, 68, 44, 243, 233, 147, 89, 79, 68, 67, 191, 166, 148, 158, 36, 135, 60, 58, 138, 83, 29, 110, 137, 252, 214, 5, 30, 113, 4, 40, 113, 9, 191, 12, 43, 217, 176, 114, 20, 90, 60, 199, 49, 191, 196, 2, 216, 75, 94, 106, 233, 168, 238, 197, 239, 156, 209, 47>>,
  OutData3 = <<136, 0, 0, 5, 0, 4, 1, 63, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 6, 151, 0, 0, 5, 88, 112, 101, 108, 108, 101, 110, 100, 117, 115, 46, 32, 84, 101, 109, 112, 111, 114, 105, 98, 117, 115, 32, 97, 117, 116, 101, 109, 32, 113, 117, 105, 98, 117, 115, 100, 97, 109, 32, 101, 116, 32, 97, 117, 116, 32, 111, 102, 102, 105, 99, 105, 105, 115, 32, 100, 101, 98, 105, 116, 105, 115, 32, 97, 117, 116, 32, 114, 101, 114, 117, 109, 32, 110, 101, 99, 101, 115, 115, 105, 116, 97, 116, 105, 98, 117, 115, 32, 115, 97, 101, 112, 101, 32, 101, 118, 101, 110, 105, 101, 116, 32, 117, 116, 32, 101, 116, 32, 118, 111, 108, 117, 112, 116, 97, 116, 101, 115, 32, 114, 101, 112, 117, 100, 105, 97, 110, 100, 97, 101, 32, 115, 105, 110, 116, 32, 101, 116, 32, 109, 111, 108, 101, 115, 116, 105, 97, 101, 32, 110, 111, 110, 32, 114, 101, 99, 117, 115, 97, 110, 100, 97, 101, 46, 32, 73, 116, 97, 113, 117, 101, 32, 101, 97, 114, 117, 109, 32, 114, 101, 114, 117, 109, 32, 104, 105, 99, 32, 116, 101, 110, 101, 116, 117, 114, 32, 97, 32, 115, 97, 112, 105, 101, 110, 116, 101, 32, 100, 101, 108, 101, 99, 116, 117, 115, 44, 32, 117, 116, 32, 97, 117, 116, 32, 114, 101, 105, 99, 105, 101, 110, 100, 105, 115, 32, 118, 111, 108, 117, 112, 116, 97, 116, 105, 98, 117, 115, 32, 109, 97, 105, 111, 114, 101, 115, 32, 97, 108, 105, 97, 115, 32, 99, 111, 110, 115, 101, 113, 117, 97, 116, 117, 114, 32, 97, 117, 116, 32, 112, 101, 114, 102, 101, 114, 101, 110, 100, 105, 115, 32, 100, 111, 108, 111, 114, 105, 98, 117, 115, 32, 97, 115, 112, 101, 114, 105, 111, 114, 101, 115, 32, 114, 101, 112, 101, 108, 108, 97, 116, 0>>,

  Context = orddict:from_list([{Idx, #enet_symbol{}} || Idx <- lists:seq(0,4095)]),
  {ok, OutData} = enet_compress2:enet_range_coder_decompress(Context, InData3),
  case OutData of
    OutData3->
      io:fwrite("decompress4_test: OK ~n");
    _ ->
      io:fwrite("decompress4_test: Failed ~n"),
      io:fwrite("Expected: ~w ~n", [OutData3]),
      io:fwrite("Got: ~w ~n", [OutData])
  end.

decompress5_test() ->
  InData4 = <<139, 115, 144, 170, 233, 40, 58, 68, 84, 211>>,
  OutData4 = <<138, 255, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0>>,

  Context = orddict:from_list([{Idx, #enet_symbol{}} || Idx <- lists:seq(0,4095)]),
  {ok, OutData} = enet_compress2:enet_range_coder_decompress(Context, InData4),
  case OutData of
    OutData4->
      io:fwrite("decompress5_test: OK ~n");
    _ ->
      io:fwrite("decompress5_test: Failed ~n"),
      io:fwrite("Expected: ~w ~n", [OutData4]),
      io:fwrite("Got: ~w ~n", [OutData])
  end.

decompress6_test() ->
  InData5 = <<134, 122, 130, 155, 173, 137, 12, 226, 98, 17, 61, 226, 164, 95, 67, 244, 73, 123, 133, 138, 145, 19, 209, 198, 21, 17, 243, 116, 254, 133, 253, 196, 235, 6, 103, 113, 166, 159, 100, 105, 37, 100, 238, 201, 182, 58, 28, 66, 38, 179, 125, 64, 28, 4, 127, 80, 129, 153, 255, 36, 164, 72, 20, 89, 223, 184, 177, 131, 3, 80, 174, 177, 21, 158, 22, 149, 105, 46, 74, 158, 143, 192, 203, 117, 89, 65, 15, 134, 131, 58, 42, 112, 93, 170, 116, 113, 152, 240, 219, 190, 185, 146, 246, 240, 59, 244, 197, 91, 245, 134, 229, 15, 202, 186, 42, 154, 206, 160, 24, 198, 181, 101, 28, 230, 216, 138, 201, 72, 72, 11, 152, 135, 224, 45, 49, 168, 77, 171, 216, 83, 128, 148, 162, 55, 132, 240, 88, 222, 22, 47, 48, 123, 164, 221, 133, 218, 200, 231, 180, 26, 238, 221, 140, 121, 239, 138, 243, 56, 99, 34, 61, 12, 149, 165, 202, 245, 202, 46, 188, 138, 63, 118, 194, 228, 67, 211, 82, 144, 220, 166, 175, 171, 92, 117, 217, 231, 80, 137, 88, 166, 57, 186, 56, 74, 80, 114, 122, 25, 192, 236, 127, 212, 11, 220, 71, 113, 167, 9, 193, 135, 60, 146, 67, 226, 153, 113, 59, 205, 185, 98, 130, 128, 253, 215, 127, 145, 127, 192, 57, 49, 176, 154, 132, 190, 99, 239, 183, 211, 215, 171, 113, 248, 241, 102, 85, 104, 8, 98, 55, 122, 224, 214, 238, 229, 100, 51, 121, 226, 107, 107, 115, 146, 32, 5, 213, 162, 47, 176, 102, 80, 106, 17, 182, 86, 167, 129, 177, 54, 36, 18, 2, 69, 148, 117, 128, 187, 158, 181, 49, 241, 191, 254, 88, 102, 160, 52, 118, 251, 189, 164, 30, 93, 41, 120, 112, 205, 111, 252, 227, 61, 48, 144, 112, 56, 170, 173, 80, 107, 219, 238, 72, 75, 64, 8, 73, 56, 38, 168, 234, 103, 48, 40, 1, 182, 87, 24, 15, 97, 231, 90, 172, 106, 130, 71, 88, 46, 112, 57, 158, 5, 10, 62, 36, 49, 108, 193, 192, 146, 15, 147, 67, 176, 29, 84, 1, 119, 69, 201, 205, 120, 191, 168, 5, 89, 59, 71, 143, 101, 7, 3, 72, 252, 88, 151, 35, 185, 187, 183, 221, 212, 209, 247, 9, 130, 214, 214, 238, 102, 6, 232, 208, 44, 240, 113, 175, 33, 12, 225, 118, 124, 250, 18, 9, 57, 10, 142, 115, 193, 152, 169, 95, 0, 180, 121, 50, 233, 209, 231, 155, 13, 75, 162, 192, 18, 104, 183, 191, 115, 25, 64, 52, 21, 90, 0, 119, 194, 210, 75, 205, 55, 31, 92, 171, 86, 191, 27, 114, 230, 160, 199, 18, 179, 94, 160, 71, 67, 202, 228, 101, 207, 168, 192, 69, 125, 85, 157, 234, 196, 218, 40, 76, 78, 160, 242, 230, 28, 26, 10, 27, 216, 212, 166, 7, 75, 6, 155, 143, 241, 145, 222, 115, 238, 183, 165, 52, 249, 127, 151, 141, 88, 12, 115, 255, 254, 35, 46, 159, 102, 16, 142, 180, 142, 203, 7, 153, 160, 235, 47, 233, 253, 184, 35, 29, 187, 214, 93, 232, 89, 192, 174, 195, 62, 248, 27, 34, 153, 157, 207, 185, 67, 201, 14, 112, 16, 95, 163, 37, 21, 205, 66, 59, 108, 239, 227, 230, 56, 70, 77, 24, 187, 34, 97, 250, 5, 83, 203, 89, 185, 38, 139, 171, 182, 166, 210, 134, 183, 181, 8, 185, 131, 115, 223, 13, 67, 19, 70, 100, 69, 155, 24, 147, 177, 245, 147, 137, 20, 181, 220, 138, 209, 197, 142, 209, 15, 85, 220, 170, 57, 188, 11, 192, 191, 97, 41, 62, 244, 64, 71, 73, 55, 191, 135, 89, 93, 157, 45, 158, 94, 29, 25, 92, 113, 159, 121, 83, 14, 13, 18, 243, 241, 23, 20, 207, 150, 78, 88, 6, 235, 249, 130, 90, 22, 218, 251, 155, 84, 0, 207, 46, 114, 133, 213, 48, 243, 238, 7, 183, 246, 190, 193, 12, 169, 253, 168, 90, 41, 145, 77, 20, 176, 18, 253, 17, 246, 9, 141, 197, 220, 141, 193, 209, 173, 55, 2, 187, 57, 169, 213, 56, 31, 17, 86, 100, 57, 56, 129, 61, 148, 44, 190, 192, 25, 179, 118, 213, 154, 23, 213, 134, 161, 93, 60, 248, 67, 151, 95, 88, 112, 141, 228, 238, 222, 156, 173, 199, 12, 94, 205, 139, 182, 249, 232, 49, 64, 117, 219, 177, 147, 73, 131, 223, 109, 31, 247, 35, 246, 156, 71, 18, 132, 137, 171, 226, 249, 119, 195, 252, 12, 179, 150, 152, 68, 178, 70, 238, 169, 198>>,
  OutData5 = <<134,0,0,3,0,115,4,0,0,0,1,0,0,0,255,255,255,255,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0,0,3,0,2,23,0,0,0,79,110,83,101,116,82,111,108,101,83,107,105,110,115,65,110,100,84,105,116,108,101,115,1,2,6,0,0,0,48,48,48,48,48,48,2,2,6,0,0,0,48,48,48,48,48,48,0,134,0,0,4,2,254,4,0,0,0,1,0,0,0,255,255,255,255,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,193,2,0,0,6,0,2,44,0,0,0,79,110,83,117,112,101,114,77,97,105,110,83,116,97,114,116,65,99,99,101,112,116,76,111,103,111,110,72,114,100,120,115,52,55,50,53,52,55,50,50,50,49,53,97,1,5,158,66,24,132,2,2,24,0,0,0,117,98,105,115,116,97,116,105,99,45,97,46,97,107,97,109,97,105,104,100,46,110,101,116,3,2,24,0,0,0,48,48,57,56,47,67,68,78,67,111,110,116,101,110,116,49,48,47,99,97,99,104,101,47,4,2,219,1,0,0,99,99,46,99,122,46,109,97,100,107,105,116,101,46,102,114,101,101,100,111,109,32,111,114,103,46,97,113,117,97,46,103,103,32,105,100,118,46,97,113,117,97,46,98,117,108,108,100,111,103,32,99,111,109,46,99,105,104,46,103,97,109,101,99,105,104,50,32,99,111,109,46,99,105,104,46,103,97,109,101,99,105,104,32,99,111,109,46,99,105,104,46,103,97,109,101,95,99,105,104,32,99,110,46,109,97,111,99,97,105,46,103,97,109,101,107,105,108,108,101,114,32,99,111,109,46,103,109,100,46,115,112,101,101,100,116,105,109,101,32,111,114,103,46,100,97,120,46,97,116,116,97,99,107,32,99,111,109,46,120,48,46,115,116,114,97,105,46,102,114,101,112,32,99,111,109,46,120,48,46,115,116,114,97,105,46,102,114,101,101,32,111,114,103,46,99,104,101,97,116,101,110,103,105,110,101,46,99,101,103,117,105,32,111,114,103,46,115,98,116,111,111,108,115,46,103,97,109,101,104,97,99,107,32,99,111,109,46,115,107,103,97,109,101,115,46,116,114,97,102,102,105,107,114,105,100,101,114,32,111,114,103,46,115,98,116,111,111,100,115,46,103,97,109,101,104,97,99,97,32,99,111,109,46,115,107,121,112,101,46,114,97,108,100,101,114,32,111,114,103,46,99,104,101,97,116,101,110,103,105,110,101,46,99,101,103,117,105,46,120,120,46,109,117,108,116,105,49,52,53,56,57,49,57,49,55,48,49,49,49,32,99,111,109,46,112,114,111,104,105,114,111,46,109,97,99,114,111,32,109,101,46,97,117,116,111,116,111,117,99,104,46,97,117,116,111,116,111,117,99,104,32,99,111,109,46,99,121,103,101,114,121,46,114,101,112,101,116,105,116,111,117,99,104,46,102,114,101,101,32,99,111,109,46,99,121,103,101,114,121,46,114,101,112,101,116,105,116,111,117,99,104,46,112,114,111,32,99,111,109,46,112,114,111,122,105,114,111,46,122,97,99,114,111,32,99,111,109,46,115,108,97,115,104,46,103,97,109,101,98,117,115,116,101,114,5,2,101,0,0,0,112,114,111,116,111,61,54,51,124,99,104,111,111,115,101,109,117,115,105,99,61,97,117,100,105,111,47,109,112,51,47,97,98,111,117,116,95,116,104,101,109,101,46,109,112,51,124,97,99,116,105,118,101,95,104,111,108,105,100,97,121,61,48,124,115,101,114,118,101,114,95,116,105,99,107,61,50,53,56,51,54,56,49,51,55,124,99,108,97,115,104,95,97,99,116,105,118,101,61,48,124,99,134,0,0,5,0,186,6,0,0,0,101,118,101,110,116,84,121,112,101,124,48,10,101,118,101,110,116,78,97,109,101,124,49,48,50,95,80,76,65,89,69,82,46,65,85,84,72,69,78,84,73,67,65,84,73,79,78,10,65,117,116,104,101,110,116,105,99,97,116,101,100,124,49,10,65,117,116,104,101,110,116,105,99,97,116,105,111,110,95,101,114,114,111,114,124,48,10,68,101,118,105,99,101,95,73,100,124,94,94,101,97,48,101,57,50,57,54,45,52,98,56,54,45,52,57,51,54,45,98,51,49,56,45,98,100,102,50,100,55,50,54,57,100,55,100,10,71,114,111,119,95,73,100,124,51,56,50,52,52,52,48,53,10,78,97,109,101,124,94,94,10,87,111,114,108,100,108,111,99,107,95,98,97,108,97,110,99,101,124,48,10,0,134,0,0,6,0,113,4,0,0,0,1,0,0,0,255,255,255,255,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,0,0,0,2,0,2,16,0,0,0,79,110,67,111,110,115,111,108,101,77,101,115,115,97,103,101,1,2,23,0,0,0,67,114,101,97,116,101,32,97,32,110,101,119,32,119,111,114,108,100,33,32,48,47,49,128,134,0,0,7,0,170,6,0,0,0,101,118,101,110,116,84,121,112,101,124,48,10,101,118,101,110,116,78,97,109,101,124,51,48,53,95,102,116,117,101,119,111,114,108,100,10,99,111,110,110,101,99,116,105,111,110,116,121,112,101,124,42,71,101,116,67,117,114,114,101,110,116,78,101,116,119,111,114,107,84,121,112,101,10,100,101,118,105,99,101,105,100,124,94,94,101,97,48,101,57,50,57,54,45,52,98,56,54,45,52,57,51,54,45,98,51,49,56,45,98,100,102,50,100,55,50,54,57,100,55,100,10,103,108,111,98,97,108,112,108,97,121,116,105,109,101,124,49,53,54,50,10,103,114,111,119,105,100,124,51,56,50,52,52,52,48,53,10,115,116,101,112,124,53,10,216>>,

  Context = orddict:from_list([{Idx, #enet_symbol{}} || Idx <- lists:seq(0,4095)]),
  % {ok, OutData} = enet_compress:enet_range_coder_decompress(Context, InData5),
  {ok, OutData} = enet_compress2:enet_range_coder_decompress(Context, InData5),
  case OutData of
    OutData5->
      io:fwrite("decompress6_test: OK ~n");
    _ ->
      io:fwrite("decompress6_test: Failed ~n"),
      io:fwrite("Expected: ~w ~n", [OutData5]),
      io:fwrite("Got: ~w ~n", [OutData])
  end.